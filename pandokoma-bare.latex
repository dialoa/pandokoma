$--$ PANDOKOMA - powerful, versatile KOMA template for Pandoc
$--$
$--$ Use $--$ to comment lines out; the second dollar sign is unnecessary
$--$ but it keeps automatic LaTeX syntax highlighting in order.
$--$ Beamer handling commented out but left here in case you want it.
$--$
%--------------------------------- Options for packages loaded elsewhere
\PassOptionsToPackage{unicode$for(hyperrefoptions)$,$hyperrefoptions$$endfor$}{hyperref}
\PassOptionsToPackage{hyphens}{url}
$if(colorlinks)$
  \PassOptionsToPackage{$if(xcoloroptions)$%
  $for(xcoloroptions)$$it$$sep$,$endfor$%
  $else$dvipsnames,svgnames,x11names$endif$}{xcolor}
$elseif(xcolor)$
  \PassOptionsToPackage{$if(xcoloroptions)$%
  $for(xcoloroptions)$$it$$sep$,$endfor$%
  $else$dvipsnames,svgnames,x11names$endif$}{xcolor}
$elseif(definecolors)$
  \PassOptionsToPackage{$if(xcoloroptions)$%
  $for(xcoloroptions)$$it$$sep$,$endfor$%
  $else$dvipsnames,svgnames,x11names$endif$}{xcolor}
$endif$
$if(dir)$
$if(latex-dir-rtl)$
  \PassOptionsToPackage{RTLdocument}{bidi}
$endif$
$endif$
$if(CJKmainfont)$
  \PassOptionsToPackage{space}{xeCJK}
$endif$
%-------------------------------------------------------- Document class
\documentclass[%
    $if(fontsize)$$fontsize$,$endif$%
    $if(lang)$$babel-lang$,$endif$%
    $if(papersize)$$papersize$paper,$endif$%
    $if(beamer)$ignorenonframetext,% $-- BEAMER Only$
      $if(handout)$handout,$endif$%
      $if(aspectratio)$aspectratio=$aspectratio$,$endif$%
    $endif$%
    $for(classoption)$$classoption$$sep$,$endfor$]{$documentclass$}
$if(komaoptions)$
  $for(komaoptions)$
    $if(it.option)$$if(it.value)$
      \KOMAoption{$it.option$}{$it.value$}     
    $endif$$endif$
  $endfor$
$endif$
$if(komaoption)$
  $for(komaoption)$
    $if(it.option)$$if(it.value)$
      \KOMAoption{$it.option$}{$it.value$}     
    $endif$$endif$
  $endfor$
$endif$
%-----------------------------------------------------------------BUGFIX
$if(longtablefix)$
\makeatletter
\newif\ifonecol
\@ifclasswith{scrbook}{onecolumn}{\onecoltrue}{\onecolfalse}
%\newcommand{\switchcol}{\ifonecol ONE\else TWO\fi}
\makeatother
$endif$
%---------------------------------------------------------------GEOMETRY
%------------------------------------------ uses raggedbottom by default
$if(raggedbottom)$\raggedbottom
$elseif(flushbottom)$\flushbottom
$else$\raggedbottom
$endif$
%-------------------------------------------------- geometry and options
$if(geometry)$
  $if(beamer)$
    \geometry{$for(geometry)$$geometry$$sep$,$endfor$}
  $else$
  \usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
  $endif$
$endif$
%-------------------------------------------------------- define lengths
%------------------ NB: setlength is implemented later on to allow users
%----------------------------  to override anything set by this template
$if(newlength)$
  $for(newlength)$
    $if(it.length)$
      $if(it.value)$
        \newlength{\$it.length$}\setlength{\$it.length$}{$it.value$}
      $else$
        \newlength{\$it.length$}
      $endif$
    $elseif(it.value)$ $-- value alone makes no sense, do nothing $
    $else$
      \newlength{\$it$}
    $endif$
  $endfor$
$endif$

%-----------------------------------------------------redefine footnotes
$if(deffootnote)$
  \deffootnote$if(deffootnote.markwidth)$[$deffootnote.markwidth$]$endif${%
  $if(deffootnote.indent)$$deffootnote.indent$$else$1em$endif$}{%
  $if(deffootnote.parindent)$$deffootnote.parindent$$else$1.5em$endif$}{%
  $if(deffootnote.definition)$$deffootnote.definition$ %
  $else$\textsuperscript{\thefootnotemark}$endif$}
$endif$
$if(setfootnoterule)$
  \setfootnoterule$if(setfootnoterule.thickness)$[$setfootnoterule.thickness$]$endif${%
  $if(setfootnoterule.width)$$setfootnoterule.width$$else$.5\textwidth$endif$}
$endif$

%----------------------------------- redefine division headings commands
$if(raggedpart)$
  \renewcommand*{\raggedpart}{$raggedpart$}
$endif$
$if(raggedchapter)$
  \renewcommand*{\raggedchapter}{$raggedchapter$}
$endif$
$if(raggedsection)$
  \renewcommand*{\raggedsection}{$raggedsection$}
$endif$
$if(partformat)$
  \renewcommand*{\partformat}{$partformat$}
$endif$
$if(chapterformat)$
  \renewcommand*{\chapterformat}{$chapterformat$}
$endif$
$if(sectionformat)$
  \renewcommand*{\sectionformat}{$sectionformat$}
$endif$
$if(subsectionformat)$
  \renewcommand*{\subsectionformat}{$subsectionformat$}
$endif$
$if(subsubsectionformat)$
  \renewcommand*{\subsubsectionformat}{$subsubsectionformat$}
$endif$
$if(paragraphformat)$
  \renewcommand*{\paragraphformat}{$paragraphformat$}
$endif$
$if(subparagraphformat)$
  \renewcommand*{\subparagraphformat}{$subparagraphformat$}
$endif$
$if(declaresectioncommand)$
  $for(declaresectioncommand)$
  \DeclareSectionCommand[%
    $if(it.counterwithin)$counterwithin={$it.counterwithin$},$endif$%
    $if(it.counterwithout)$counterwithout={$it.counterwithout$},$endif$%
    $if(it.expandtopt)$expandtopt={$it.expandtopt$},$endif$%
    $if(it.level)$level={$it.level$},$endif$%
    $if(it.style)$style={$it.style$},$endif$%
    $if(it.tocstyle)$tocstyle={$it.tocstyle$},$endif$%
    $if(it.tocafterpar)$tocafterpar={$it.tocafterpar$},$endif$%
    $if(it.tocbeforeskip)$tocbeforeskip={$it.tocbeforeskip$},$endif$%
    $if(it.tocbreakafternumber)$tocbreakafternumber={$it.tocbreakafternumber$},$endif$%
    $if(it.tocdynindent)$tocdynindent={$it.tocdynindent$},$endif$%
    $if(it.tocdynnumwidth)$tocdynnumwidth={$it.tocdynnumwidth$},$endif$%
    $if(it.tocentryformat)$tocentryformat={$it.tocentryformat$},$endif$%
    $if(it.tocentrynumberformat)$tocentrynumberformat={$it.tocentrynumberformat$},$endif$%
    $if(it.tocindent)$tocindent={$it.tocindent$},$endif$%
    $if(it.toclevel)$toclevel={$it.toclevel$},$endif$%
    $if(it.tocindentfollows)$tocindentfollows={$it.tocindentfollows$},$endif$%
    $if(it.toclinefill)$toclinefill={$it.toclinefill$},$endif$%
    $if(it.tocnumsep)$tocnumsep={$it.tocnumsep$},$endif$%
    $if(it.tocnumwidth)$tocnumwidth={$it.tocnumwidth$},$endif$%
    $if(it.toconendentry)$toconendentry={$it.toconendentry$},$endif$%
    $if(it.toconendlastentry)$toconendlastentry={$it.toconendlastentry$},$endif$%
    $if(it.toconstartentry)$toconstartentry={$it.toconstartentry$},$endif$%
    $if(it.toconstartfirstentry)$toconstartfirstentry={$it.toconstartfirstentry$},$endif$%
    $if(it.toconstarthigherlevel)$toconstarthigherlevel={$it.toconstarthigherlevel$},$endif$%
    $if(it.toconstartlowerlevel)$toconstartlowerlevel={$it.toconstartlowerlevel$},$endif$%
    $if(it.toconstartsamelevel)$toconstartsamelevel={$it.toconstartsamelevel$},$endif$%
    $if(it.tocpagenumberbox)$tocpagenumberbox={$it.tocpagenumberbox$},$endif$%
    $if(it.tocpagenumberformat)$tocpagenumberformat={$it.tocpagenumberformat$},$endif$%
    $if(it.tocpagenumberwidth)$tocpagenumberwidth={$it.tocpagenumberwidth$},$endif$%
    $if(it.tocprepagenumber)$tocprepagenumber={$it.tocprepagenumber$},$endif$%
    $if(it.tocraggedentrytext)$tocraggedentrytext={$it.tocraggedentrytext$},$endif$%
    $if(it.tocraggedpagenumber)$tocraggedpagenumber={$it.tocraggedpagenumber$},$endif$%
    $if(it.tocraggedright)$tocraggedright={$it.tocraggedright$},$endif$%
    $if(it.tocraggedindent)$tocraggedindent={$it.tocraggedindent$},$endif$%
    $if(it.afterindent)$afterindent={$it.afterindent$},$endif$%
    $if(it.afterskip)$afterskip={$it.afterskip$},$endif$%
    $if(it.beforeskip)$beforeskip={$it.beforeskip$},$endif$%
    $if(it.font)$font={$it.font$},$endif$%
    $if(it.innerskip)$innerskip={$it.innerskip$},$endif$%
    $if(it.pagestyle)$pagestyle={$it.pagestyle$},$endif$%
    $if(it.prefixfont)$prefixfont={$it.prefixfont$},$endif$%
    $if(it.indent)$indent={$it.indent$},$endif$%
    $if(it.runin)$runin={$it.runin$},$endif$%
  ]{$it.element$}
  $endfor$
$endif$
$if(redeclaresectioncommand)$
  $for(redeclaresectioncommand)$
  \RedeclareSectionCommand[%
    $if(it.counterwithin)$counterwithin={$it.counterwithin$},$endif$%
    $if(it.counterwithout)$counterwithout={$it.counterwithout$},$endif$%
    $if(it.expandtopt)$expandtopt={$it.expandtopt$},$endif$%
    $if(it.level)$level={$it.level$},$endif$%
    $if(it.style)$style={$it.style$},$endif$%
    $if(it.tocstyle)$tocstyle={$it.tocstyle$},$endif$%
    $if(it.tocafterpar)$tocafterpar={$it.tocafterpar$},$endif$%
    $if(it.tocbeforeskip)$tocbeforeskip={$it.tocbeforeskip$},$endif$%
    $if(it.tocbreakafternumber)$tocbreakafternumber={$it.tocbreakafternumber$},$endif$%
    $if(it.tocdynindent)$tocdynindent={$it.tocdynindent$},$endif$%
    $if(it.tocdynnumwidth)$tocdynnumwidth={$it.tocdynnumwidth$},$endif$%
    $if(it.tocentryformat)$tocentryformat={$it.tocentryformat$},$endif$%
    $if(it.tocentrynumberformat)$tocentrynumberformat={$it.tocentrynumberformat$},$endif$%
    $if(it.tocindent)$tocindent={$it.tocindent$},$endif$%
    $if(it.toclevel)$toclevel={$it.toclevel$},$endif$%
    $if(it.tocindentfollows)$tocindentfollows={$it.tocindentfollows$},$endif$%
    $if(it.toclinefill)$toclinefill={$it.toclinefill$},$endif$%
    $if(it.tocnumsep)$tocnumsep={$it.tocnumsep$},$endif$%
    $if(it.tocnumwidth)$tocnumwidth={$it.tocnumwidth$},$endif$%
    $if(it.toconendentry)$toconendentry={$it.toconendentry$},$endif$%
    $if(it.toconendlastentry)$toconendlastentry={$it.toconendlastentry$},$endif$%
    $if(it.toconstartentry)$toconstartentry={$it.toconstartentry$},$endif$%
    $if(it.toconstartfirstentry)$toconstartfirstentry={$it.toconstartfirstentry$},$endif$%
    $if(it.toconstarthigherlevel)$toconstarthigherlevel={$it.toconstarthigherlevel$},$endif$%
    $if(it.toconstartlowerlevel)$toconstartlowerlevel={$it.toconstartlowerlevel$},$endif$%
    $if(it.toconstartsamelevel)$toconstartsamelevel={$it.toconstartsamelevel$},$endif$%
    $if(it.tocpagenumberbox)$tocpagenumberbox={$it.tocpagenumberbox$},$endif$%
    $if(it.tocpagenumberformat)$tocpagenumberformat={$it.tocpagenumberformat$},$endif$%
    $if(it.tocpagenumberwidth)$tocpagenumberwidth={$it.tocpagenumberwidth$},$endif$%
    $if(it.tocprepagenumber)$tocprepagenumber={$it.tocprepagenumber$},$endif$%
    $if(it.tocraggedentrytext)$tocraggedentrytext={$it.tocraggedentrytext$},$endif$%
    $if(it.tocraggedpagenumber)$tocraggedpagenumber={$it.tocraggedpagenumber$},$endif$%
    $if(it.tocraggedright)$tocraggedright={$it.tocraggedright$},$endif$%
    $if(it.tocraggedindent)$tocraggedindent={$it.tocraggedindent$},$endif$%
    $if(it.afterindent)$afterindent={$it.afterindent$},$endif$%
    $if(it.afterskip)$afterskip={$it.afterskip$},$endif$%
    $if(it.beforeskip)$beforeskip={$it.beforeskip$},$endif$%
    $if(it.font)$font={$it.font$},$endif$%
    $if(it.innerskip)$innerskip={$it.innerskip$},$endif$%
    $if(it.pagestyle)$pagestyle={$it.pagestyle$},$endif$%
    $if(it.prefixfont)$prefixfont={$it.prefixfont$},$endif$%
    $if(it.indent)$indent={$it.indent$},$endif$%
    $if(it.runin)$runin={$it.runin$},$endif$%
  ]{$it.element$}
  $endfor$
$endif$
$if(declarenewsectioncommand)$
  $for(declarenewsectioncommand)$
  \DeclareNewSectionCommand[%
    $if(it.counterwithin)$counterwithin={$it.counterwithin$},$endif$%
    $if(it.counterwithout)$counterwithout={$it.counterwithout$},$endif$%
    $if(it.expandtopt)$expandtopt={$it.expandtopt$},$endif$%
    $if(it.level)$level={$it.level$},$endif$%
    $if(it.style)$style={$it.style$},$endif$%
    $if(it.tocstyle)$tocstyle={$it.tocstyle$},$endif$%
    $if(it.tocafterpar)$tocafterpar={$it.tocafterpar$},$endif$%
    $if(it.tocbeforeskip)$tocbeforeskip={$it.tocbeforeskip$},$endif$%
    $if(it.tocbreakafternumber)$tocbreakafternumber={$it.tocbreakafternumber$},$endif$%
    $if(it.tocdynindent)$tocdynindent={$it.tocdynindent$},$endif$%
    $if(it.tocdynnumwidth)$tocdynnumwidth={$it.tocdynnumwidth$},$endif$%
    $if(it.tocentryformat)$tocentryformat={$it.tocentryformat$},$endif$%
    $if(it.tocentrynumberformat)$tocentrynumberformat={$it.tocentrynumberformat$},$endif$%
    $if(it.tocindent)$tocindent={$it.tocindent$},$endif$%
    $if(it.toclevel)$toclevel={$it.toclevel$},$endif$%
    $if(it.tocindentfollows)$tocindentfollows={$it.tocindentfollows$},$endif$%
    $if(it.toclinefill)$toclinefill={$it.toclinefill$},$endif$%
    $if(it.tocnumsep)$tocnumsep={$it.tocnumsep$},$endif$%
    $if(it.tocnumwidth)$tocnumwidth={$it.tocnumwidth$},$endif$%
    $if(it.toconendentry)$toconendentry={$it.toconendentry$},$endif$%
    $if(it.toconendlastentry)$toconendlastentry={$it.toconendlastentry$},$endif$%
    $if(it.toconstartentry)$toconstartentry={$it.toconstartentry$},$endif$%
    $if(it.toconstartfirstentry)$toconstartfirstentry={$it.toconstartfirstentry$},$endif$%
    $if(it.toconstarthigherlevel)$toconstarthigherlevel={$it.toconstarthigherlevel$},$endif$%
    $if(it.toconstartlowerlevel)$toconstartlowerlevel={$it.toconstartlowerlevel$},$endif$%
    $if(it.toconstartsamelevel)$toconstartsamelevel={$it.toconstartsamelevel$},$endif$%
    $if(it.tocpagenumberbox)$tocpagenumberbox={$it.tocpagenumberbox$},$endif$%
    $if(it.tocpagenumberformat)$tocpagenumberformat={$it.tocpagenumberformat$},$endif$%
    $if(it.tocpagenumberwidth)$tocpagenumberwidth={$it.tocpagenumberwidth$},$endif$%
    $if(it.tocprepagenumber)$tocprepagenumber={$it.tocprepagenumber$},$endif$%
    $if(it.tocraggedentrytext)$tocraggedentrytext={$it.tocraggedentrytext$},$endif$%
    $if(it.tocraggedpagenumber)$tocraggedpagenumber={$it.tocraggedpagenumber$},$endif$%
    $if(it.tocraggedright)$tocraggedright={$it.tocraggedright$},$endif$%
    $if(it.tocraggedindent)$tocraggedindent={$it.tocraggedindent$},$endif$%
    $if(it.afterindent)$afterindent={$it.afterindent$},$endif$%
    $if(it.afterskip)$afterskip={$it.afterskip$},$endif$%
    $if(it.beforeskip)$beforeskip={$it.beforeskip$},$endif$%
    $if(it.font)$font={$it.font$},$endif$%
    $if(it.innerskip)$innerskip={$it.innerskip$},$endif$%
    $if(it.pagestyle)$pagestyle={$it.pagestyle$},$endif$%
    $if(it.prefixfont)$prefixfont={$it.prefixfont$},$endif$%
    $if(it.indent)$indent={$it.indent$},$endif$%
    $if(it.runin)$runin={$it.runin$},$endif$%
  ]{$it.element$}
  $endfor$
$endif$
$if(providesectioncommand)$
  $for(providesectioncommand)$
  \ProvideSectionCommand[%
    $if(it.counterwithin)$counterwithin={$it.counterwithin$},$endif$%
    $if(it.counterwithout)$counterwithout={$it.counterwithout$},$endif$%
    $if(it.expandtopt)$expandtopt={$it.expandtopt$},$endif$%
    $if(it.level)$level={$it.level$},$endif$%
    $if(it.style)$style={$it.style$},$endif$%
    $if(it.tocstyle)$tocstyle={$it.tocstyle$},$endif$%
    $if(it.tocafterpar)$tocafterpar={$it.tocafterpar$},$endif$%
    $if(it.tocbeforeskip)$tocbeforeskip={$it.tocbeforeskip$},$endif$%
    $if(it.tocbreakafternumber)$tocbreakafternumber={$it.tocbreakafternumber$},$endif$%
    $if(it.tocdynindent)$tocdynindent={$it.tocdynindent$},$endif$%
    $if(it.tocdynnumwidth)$tocdynnumwidth={$it.tocdynnumwidth$},$endif$%
    $if(it.tocentryformat)$tocentryformat={$it.tocentryformat$},$endif$%
    $if(it.tocentrynumberformat)$tocentrynumberformat={$it.tocentrynumberformat$},$endif$%
    $if(it.tocindent)$tocindent={$it.tocindent$},$endif$%
    $if(it.toclevel)$toclevel={$it.toclevel$},$endif$%
    $if(it.tocindentfollows)$tocindentfollows={$it.tocindentfollows$},$endif$%
    $if(it.toclinefill)$toclinefill={$it.toclinefill$},$endif$%
    $if(it.tocnumsep)$tocnumsep={$it.tocnumsep$},$endif$%
    $if(it.tocnumwidth)$tocnumwidth={$it.tocnumwidth$},$endif$%
    $if(it.toconendentry)$toconendentry={$it.toconendentry$},$endif$%
    $if(it.toconendlastentry)$toconendlastentry={$it.toconendlastentry$},$endif$%
    $if(it.toconstartentry)$toconstartentry={$it.toconstartentry$},$endif$%
    $if(it.toconstartfirstentry)$toconstartfirstentry={$it.toconstartfirstentry$},$endif$%
    $if(it.toconstarthigherlevel)$toconstarthigherlevel={$it.toconstarthigherlevel$},$endif$%
    $if(it.toconstartlowerlevel)$toconstartlowerlevel={$it.toconstartlowerlevel$},$endif$%
    $if(it.toconstartsamelevel)$toconstartsamelevel={$it.toconstartsamelevel$},$endif$%
    $if(it.tocpagenumberbox)$tocpagenumberbox={$it.tocpagenumberbox$},$endif$%
    $if(it.tocpagenumberformat)$tocpagenumberformat={$it.tocpagenumberformat$},$endif$%
    $if(it.tocpagenumberwidth)$tocpagenumberwidth={$it.tocpagenumberwidth$},$endif$%
    $if(it.tocprepagenumber)$tocprepagenumber={$it.tocprepagenumber$},$endif$%
    $if(it.tocraggedentrytext)$tocraggedentrytext={$it.tocraggedentrytext$},$endif$%
    $if(it.tocraggedpagenumber)$tocraggedpagenumber={$it.tocraggedpagenumber$},$endif$%
    $if(it.tocraggedright)$tocraggedright={$it.tocraggedright$},$endif$%
    $if(it.tocraggedindent)$tocraggedindent={$it.tocraggedindent$},$endif$%
    $if(it.afterindent)$afterindent={$it.afterindent$},$endif$%
    $if(it.afterskip)$afterskip={$it.afterskip$},$endif$%
    $if(it.beforeskip)$beforeskip={$it.beforeskip$},$endif$%
    $if(it.font)$font={$it.font$},$endif$%
    $if(it.innerskip)$innerskip={$it.innerskip$},$endif$%
    $if(it.pagestyle)$pagestyle={$it.pagestyle$},$endif$%
    $if(it.prefixfont)$prefixfont={$it.prefixfont$},$endif$%
    $if(it.indent)$indent={$it.indent$},$endif$%
    $if(it.runin)$runin={$it.runin$},$endif$%
  ]{$it.element$}
  $endfor$
$endif$

%--------------------------------------------------------- PAGE SETTINGS
%-----------------------------to manage text 'layers' within koma-script
$if(scrlayer)$
  \usepackage{scrlayer}
$endif$

%--------------to define and manage page styles (see pkg "fancyhdr" too)
%---------------------------- also loaded if scr-page settings are used.
$if(scrlayer-scrpage)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(scrheadings)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(ohead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(chead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(ihead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(lehead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(cehead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(rehead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(lohead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(cohead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(rohead)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(ofoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(cfoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(ifoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(lefoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(cefoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(refoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(lofoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(cofoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(rofoot)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(automark)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(automark-star)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(autooneside)$
  \usepackage[autooneside=true]{scrlayer-scrpage}
$elseif(partmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(chaptermarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(sectionmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(subsectionmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(subsubsectionmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(paragraphmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(subparagraphmarkformat)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(manualmark)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$elseif(setmark)$
  $if(autooneside)$
    \usepackage[autooneside=true]{scrlayer-scrpage}
  $else$
    \usepackage{scrlayer-scrpage}
  $endif$
$endif$

%------------------------------ scrheadings page style header and footer
$if(scrheadings)$
  \pagestyle{scrheadings}
$elseif(ohead)$
  \pagestyle{scrheadings}
$elseif(chead)$
  \pagestyle{scrheadings}
$elseif(ihead)$
  \pagestyle{scrheadings}
$elseif(lehead)$
  \pagestyle{scrheadings}
$elseif(cehead)$
  \pagestyle{scrheadings}
$elseif(rehead)$
  \pagestyle{scrheadings}
$elseif(lohead)$
  \pagestyle{scrheadings}
$elseif(cohead)$
  \pagestyle{scrheadings}
$elseif(rohead)$
  \pagestyle{scrheadings}
$elseif(ofoot)$
  \pagestyle{scrheadings}
$elseif(cfoot)$
  \pagestyle{scrheadings}
$elseif(ifoot)$
  \pagestyle{scrheadings}
$elseif(lefoot)$
  \pagestyle{scrheadings}
$elseif(cefoot)$
  \pagestyle{scrheadings}
$elseif(refoot)$
  \pagestyle{scrheadings}
$elseif(lofoot)$
  \pagestyle{scrheadings}
$elseif(cofoot)$
  \pagestyle{scrheadings}
$elseif(rofoot)$
  \pagestyle{scrheadings}
$endif$
$if(ohead)$
  $if(ohead.headings)$
    $if(ohead.plain)$
      \ohead[$ohead.plain$]{$ohead.headings$}
    $else$
      \ohead{$ohead.headings$}
    $endif$
  $elseif(ohead.plain)$
    \ohead[$ohead.plain$]{OHEAD HEADINGS UNDEFINED}
  $else$
    \ohead{$ohead$}
  $endif$
$endif$
$if(chead)$
  $if(chead.headings)$
    $if(chead.plain)$
      \chead[$chead.plain$]{$chead.headings$}
    $else$
      \chead{$chead.headings$}
    $endif$
  $elseif(chead.plain)$
    \chead[$chead.plain$]{CHEAD HEADINGS UNDEFINED}
  $else$
    \chead{$chead$}
  $endif$
$endif$
$if(ihead)$
  $if(ihead.headings)$
    $if(ihead.plain)$
      \ihead[$ihead.plain$]{$ihead.headings$}
    $else$
      \ihead{$ihead.headings$}
    $endif$
  $elseif(ihead.plain)$
    \ihead[$ihead.plain$]{IHEAD HEADINGS UNDEFINED}
  $else$
    \ihead{$ihead$}
  $endif$
$endif$
$if(lehead)$
  $if(lehead.headings)$
    $if(lehead.plain)$
      \lehead[$lehead.plain$]{$lehead.headings$}
    $else$
      \lehead{$lehead.headings$}
    $endif$
  $elseif(lehead.plain)$
    \lehead[$lehead.plain$]{LEHEAD HEADINGS UNDEFINED}
  $else$
    \lehead{$lehead$}
  $endif$
$endif$
$if(cehead)$
  $if(cehead.headings)$
    $if(cehead.plain)$
      \cehead[$cehead.plain$]{$cehead.headings$}
    $else$
      \cehead{$cehead.headings$}
    $endif$
  $elseif(cehead.plain)$
    \cehead[$cehead.plain$]{CEHEAD HEADINGS UNDEFINED}
  $else$
    \cehead{$cehead$}
  $endif$
$endif$
$if(rehead)$
  $if(rehead.headings)$
    $if(rehead.plain)$
      \rehead[$rehead.plain$]{$rehead.headings$}
    $else$
      \rehead{$rehead.headings$}
    $endif$
  $elseif(rehead.plain)$
    \rehead[$rehead.plain$]{REHEAD HEADINGS UNDEFINED}
  $else$
    \rehead{$rehead$}
  $endif$
$endif$
$if(lohead)$
  $if(lohead.headings)$
    $if(lohead.plain)$
      \lohead[$lohead.plain$]{$lohead.headings$}
    $else$
      \lohead{$lohead.headings$}
    $endif$
  $elseif(lohead.plain)$
    \lohead[$lohead.plain$]{LOHEAD HEADINGS UNDEFINED}
  $else$
    \lohead{$lohead$}
  $endif$
$endif$
$if(cohead)$
  $if(cohead.headings)$
    $if(cohead.plain)$
      \cohead[$cohead.plain$]{$cohead.headings$}
    $else$
      \cohead{$cohead.headings$}
    $endif$
  $elseif(cohead.plain)$
    \cohead[$cohead.plain$]{COHEAD HEADINGS UNDEFINED}
  $else$
    \cohead{$cohead$}
  $endif$
$endif$
$if(rohead)$
  $if(rohead.headings)$
    $if(rohead.plain)$
      \rohead[$rohead.plain$]{$rohead.headings$}
    $else$
      \rohead{$rohead.headings$}
    $endif$
  $elseif(rohead.plain)$
    \rohead[$rohead.plain$]{ROHEAD HEADINGS UNDEFINED}
  $else$
    \rohead{$rohead$}
  $endif$
$endif$
$if(ofoot)$
  $if(ofoot.headings)$
    $if(ofoot.plain)$
      \ofoot[$ofoot.plain$]{$ofoot.headings$}
    $else$
      \ofoot{$ofoot.headings$}
    $endif$
  $elseif(ofoot.plain)$
    \ofoot[$ofoot.plain$]{OFOOT HEADINGS UNDEFINED}
  $else$
    \ofoot{$ofoot$}
  $endif$
$endif$
$if(cfoot)$
  $if(cfoot.headings)$
    $if(cfoot.plain)$
      \cfoot[$cfoot.plain$]{$cfoot.headings$}
    $else$
      \cfoot{$cfoot.headings$}
    $endif$
  $elseif(cfoot.plain)$
    \cfoot[$cfoot.plain$]{CFOOT HEADINGS UNDEFINED}
  $else$
    \cfoot{$cfoot$}
  $endif$
$endif$
$if(ifoot)$
  $if(ifoot.headings)$
    $if(ifoot.plain)$
      \ifoot[$ifoot.plain$]{$ifoot.headings$}
    $else$
      \ifoot{$ifoot.headings$}
    $endif$
  $elseif(ifoot.plain)$
    \ifoot[$ifoot.plain$]{IFOOT HEADINGS UNDEFINED}
  $else$
    \ifoot{$ifoot$}
  $endif$
$endif$
$if(lefoot)$
  $if(lefoot.headings)$
    $if(lefoot.plain)$
      \lefoot[$lefoot.plain$]{$lefoot.headings$}
    $else$
      \lefoot{$lefoot.headings$}
    $endif$
  $elseif(lefoot.plain)$
    \lefoot[$lefoot.plain$]{LEFOOT HEADINGS UNDEFINED}
  $else$
    \lefoot{$lefoot$}
  $endif$
$endif$
$if(cefoot)$
  $if(cefoot.headings)$
    $if(cefoot.plain)$
      \cefoot[$cefoot.plain$]{$cefoot.headings$}
    $else$
      \cefoot{$cefoot.headings$}
    $endif$
  $elseif(cefoot.plain)$
    \cefoot[$cefoot.plain$]{CEFOOT HEADINGS UNDEFINED}
  $else$
    \cefoot{$cefoot$}
  $endif$
$endif$
$if(refoot)$
  $if(refoot.headings)$
    $if(refoot.plain)$
      \refoot[$refoot.plain$]{$refoot.headings$}
    $else$
      \refoot{$refoot.headings$}
    $endif$
  $elseif(refoot.plain)$
    \refoot[$refoot.plain$]{REFOOT HEADINGS UNDEFINED}
  $else$
    \refoot{$refoot$}
  $endif$
$endif$
$if(lofoot)$
  $if(lofoot.headings)$
    $if(lofoot.plain)$
      \lofoot[$lofoot.plain$]{$lofoot.headings$}
    $else$
      \lofoot{$lofoot.headings$}
    $endif$
  $elseif(lofoot.plain)$
    \lofoot[$lofoot.plain$]{LOFOOT HEADINGS UNDEFINED}
  $else$
    \lofoot{$lofoot$}
  $endif$
$endif$
$if(cofoot)$
  $if(cofoot.headings)$
    $if(cofoot.plain)$
      \cofoot[$cofoot.plain$]{$cofoot.headings$}
    $else$
      \cofoot{$cofoot.headings$}
    $endif$
  $elseif(cofoot.plain)$
    \cofoot[$cofoot.plain$]{COFOOT HEADINGS UNDEFINED}
  $else$
    \cofoot{$cofoot$}
  $endif$
$endif$
$if(rofoot)$
  $if(rofoot.headings)$
    $if(rofoot.plain)$
      \rofoot[$rofoot.plain$]{$rofoot.headings$}
    $else$
      \rofoot{$rofoot.headings$}
    $endif$
  $elseif(rofoot.plain)$
    \rofoot[$rofoot.plain$]{ROFOOT HEADINGS UNDEFINED}
  $else$
    \rofoot{$rofoot$}
  $endif$
$endif$

%------------------------ page marks: automark, automark* and manualmark
%---------------- automark: specify one alone, or right/recto left/verso
$if(automark)$
  $if(automark.right)$
    $if(automark.left)$
      \automark[$automark.right$]{$automark.left$}
    $elseif(automark.verso)$
      \automark[$automark.right$]{$automark.verso$}
    $else$
      \automark[$automark.right$]{$automark.right$}    
    $endif$
  $elseif(automark.recto)$
    $if(automark.left)$
      \automark[$automark.recto$]{$automark.left$}
    $elseif(automark.verso)$
      \automark[$automark.recto$]{$automark.verso$}
    $else$
      \automark[$automark.recto$]{$automark.recto$}    
    $endif$
  $elseif(automark.left)$
    $if(automark.right)$
      \automark[$automark.right$]{$automark.left$}
    $elseif(automark.recto)$
      \automark[$automark.recto$]{$automark.left$}
    $else$
      \automark[$automark.left$]{$automark.left$}    
    $endif$
  $elseif(automark.verso)$
    $if(automark.right)$
      \automark[$automark.right$]{$automark.verso$}
    $elseif(automark.recto)$
      \automark[$automark.recto$]{$automark.verso$}
    $else$
      \automark[$automark.verso$]{$automark.verso$}    
    $endif$
  $else$
    \automark[$automark$]{$automark$}
  $endif$
$endif$
$if(automark-star)$
  $if(automark-star.right)$
    $if(automark-star.left)$
      \automark*[$automark-star.right$]{$automark-star.left$}
    $elseif(automark-star.verso)$
      \automark*[$automark-star.right$]{$automark-star.verso$}
    $else$
      \automark*[$automark-star.right$]{}    
    $endif$
  $elseif(automark-star.recto)$
    $if(automark-star.left)$
      \automark*[$automark-star.recto$]{$automark-star.left$}
    $elseif(automark-star.verso)$
      \automark*[$automark-star.recto$]{$automark-star.verso$}
    $else$
      \automark*[$automark-star.recto$]{}    
    $endif$
  $elseif(automark-star.left)$
    $if(automark-star.right)$
      \automark*[$automark-star.right$]{$automark-star.left$}
    $elseif(automark-star.recto)$
      \automark*[$automark-star.recto$]{$automark-star.left$}
    $else$
      \automark*{$automark-star.left$}    
    $endif$
  $elseif(automark-star.verso)$
    $if(automark-star.right)$
      \automark*[$automark-star.right$]{$automark-star.verso$}
    $elseif(automark-star.recto)$
      \automark*[$automark-star.recto$]{$automark-star.verso$}
    $else$
      \automark*{$automark-star.verso$}    
    $endif$
  $else$
    \automark*[$automark-star$]{$automark-star$}
  $endif$
$endif$
%------------------------------------------------- format division marks
$if(partmarkformat)$
  \renewcommand*{\partmarkformat}{$partmarkformat$}
$endif$
$if(chaptermarkformat)$
  \renewcommand*{\chaptermarkformat}{$chaptermarkformat$}
$endif$
$if(sectionmarkformat)$
  \renewcommand*{\sectionmarkformat}{$sectionmarkformat$}
$endif$
$if(subsectionmarkformat)$
  \renewcommand*{\subsectionmarkformat}{$subsectionmarkformat$}
$endif$
$if(subsubsectionmarkformat)$
  \renewcommand*{\subsubsectionmarkformat}{$subsubsectionmarkformat$}
$endif$
$if(paragraphmarkformat)$
  \renewcommand*{\paragraphmarkformat}{$paragraphmarkformat$}
$endif$
$if(subparagraphmarkformat)$
  \renewcommand*{\subparagraphmarkformat}{$subparagraphmarkformat$}
$endif$
%---------------------------------------------------------- manual marks
$if(manualmark)$
  \manualmark
$elseif(setmark)$
  \manualmark
$endif$
$if(setmark)$
  $if(setmark.right)$
    $if(setmark.left)$
      \markboth{$setmark.left$}{$setmark.right$}
    $elseif(setmark.verso)$
      \markboth{$setmark.verso$}{$setmark.right$}
    $else$
      \markright{$setmark.right$}
    $endif$
  $elseif(setmark.recto)$
    $if(setmark.left)$
      \markboth{$setmark.left$}{$setmark.recto$}
    $elseif(setmark.verso)$
      \markboth{$setmark.verso$}{$setmark.recto$}
    $else$
      \markright{$setmark.recto$}
    $endif$
  $elseif(setmark.left)$
      \markleft{$setmark.left$}
  $elseif(setmark.verso)$
      \markleft{$setmark.verso$}
  $else$
      \markdouble{$setmark$}
  $endif$
$endif$

%----------------------to control note columns parallel to the main text
$if(scrlayer-notecolumn)$
  \usepackage{scrlayer-notecolumn}
  $if(notecolumnfontsize)$
    %-------------set side note column (needs pkg "scrlayer-notecolumn")
    \setkomafont{notecolumn.marginpar}{$notecolumnfontsize$}
  $endif$
$endif$


%---------------------------------------------------------EXTRA PACKAGES
%--------------------------------------------------------- user packages
%---------------------------------------  (some common packages are also
%------------------------------------provided as separate options below)
$if(latex-packages)$
  $for(latex-packages)$
    $if(it.package)$
      \usepackage[$if(it.options)$%
        $for(it.options)$$it$$sep$,$endfor$%
      $endif$]{$it.package$}
    $else$
      \usepackage{$it$}
    $endif$
  $endfor$
$endif$

%------------------------advanced font selection in XeLaTeX and LuaLaTeX
%--------------------------enable system font access (needed by XeLaTex)
%-----------for: \setmainfont{...}, \setsansfont{...}, \setmonofont{...} 
%----------------------------and \setmathfont{...} see option "mainfont".
$if(fontspec)$
  \usepackage{fontspec}
$elseif(mainfont)$
  \usepackage{fontspec}
$elseif(mathfont)$
  \usepackage{fontspec}
$elseif(monofont)$
  \usepackage{fontspec}
$elseif(sansfont)$
  \usepackage{fontspec}
$elseif(CJKmainfont)$
  \usepackage{fontspec}
$endif$

%---to mix onecolumn and twocolumn modes for example for wide equations.
%-------------------------------------usage: \begin{strip}...\end{strip}
$if(cuted)$
  \usepackage{cuted}
$endif$

%-----------------------for url-sensitive linebreaks (needed by XeLaTex)
$if(url)$
  \usepackage{url}
$endif$

%-------------------------------for fitch-style natural deduction proofs
$if(lplfitch)$
  \usepackage{lplfitch}
$endif$

%------------ for advanced math typesetting (loads all default math pkg)
%---------------------------------- amsmath and amssymb loaded elsewhere
$if(math)$
%---------------------------------mathematical tools to use with amsmath
  \usepackage{mathtools}
%-----------------------TeX fonts from the american mathematical society
  \usepackage{amsfonts}
%--------------------------typesetting of custom theorems (in ams style)
  \usepackage{amsthm}
%----------------------------------------dirac bra-ket and set notations
  \usepackage{braket}
%-----------------for unicode (utf8) math typesettings support for XeTeX
%------------------------------for numbered cases (mappings) environment
  \usepackage{cases}
%-------------------for proof trees in the style of the sequent calculus
  \usepackage{bussproofs}
$endif$

%--------------------to create (tabular cells spanning) multiple columns 
%-----------------------------------------------(load before pkg "bidi")
$if(multicol)$
  \usepackage{multicol}
$endif$

%-----------------to create continuation headings and legends for floats
$if(ccaption)$
  \usepackage{ccaption}
$endif$

%-------------------------to scale graphics relative to reference object 
%-------------------------------------------------(needs pkg "graphicx")
%--------------usage: \scalerel*{\includegraphics{inlinegraphic.pdf}}{O}
$if(scalerel)$
  \usepackage{scalerel}
$endif$

%----------------------------------to allow text to flow around graphics
$if(wrapfig)$
  \usepackage{wrapfig}
$endif$

%------------------to insert pictures into paragraphs (see pkg "picins")
$if(picinpar)$
  \usepackage{picinpar}
$endif$

%----------to create postscript and pdf graphics in TeX (see pkg "tikz")
$if(pgf)$
  \usepackage{pgf}
$endif$

$if(tikz)$
  \usepackage{tikz}%----------------------for drawing functions in LaTeX
  $if(usetikzlibrary)$
    \usetikzlibrary{$for(usetikzlibrary)$$it$$sep$,$endfor$}
  $endif$
$endif$

%---to not interpret latex commands but display them (see pkg "upquote")
$if(verbatim)$
  \usepackage{verbatim}
$endif$

%--------------------------------------------to typeset dropped capitals
$if(lettrine)$
  \usepackage{lettrine}
$endif$

%--------------------------------------------------------to avoid widows
$if(nowidow)$
  \usepackage[$for(nowidowoptions)$$sep$,$endfor$]{nowidow}
$endif$

%-----------to generate lorem ipsum blind text text for testing purposes
$if(blindtext)$
  \usepackage{blindtext}
$endif$

%-------------to generate sentences in kant's style for testing purposes
$if(kantlipsum)$
  \usepackage{kantlipsum}
$endif$

%--to draw frame around pages to see margin changes for testing purposes
$if(showframe)$
  \usepackage{showframe}
$endif$

%-----------------------------------to print watermarks and line numbers
$if(draftwatermark)$
  \usepackage[$for(draftwatermarkoptions)$$it$$sep$,$endfor$%
  ]{draftwatermark}
$endif$
$if(linenumbers)$
  \usepackage{lineno}
$endif$
$if(lineno)$
  \usepackage{lineno}
$endif$

%-------------------to include the creative commons icons in my document
$if(ccicons)$
  \usepackage{ccicons}
$endif$

%-------------------------float (load pkg "float" before pkg "hyperref")
$if(float)$
  \usepackage{float}
$endif$

%--------------------------------------------------------COMMON SETTINGS
%----------------------------------------------Pandoc's default template

$--$ Commenting out beamer handling
$--$ 
$--$ $if(beamer)$
$--$ $if(background-image)$
$--$ \usebackgroundtemplate{%
$--$   \includegraphics[width=\paperwidth]{$background-image$}%
$--$ }
$--$ $endif$
$--$ \usepackage{pgfpages}
$--$ \setbeamertemplate{caption}[numbered]
$--$ \setbeamertemplate{caption label separator}{: }
$--$ \setbeamercolor{caption name}{fg=normal text.fg}
$--$ \beamertemplatenavigationsymbols$if(navigation)$$navigation$$else$empty$endif$
$--$ $for(beameroption)$
$--$ \setbeameroption{$beameroption$}
$--$ $endfor$
$--$ % Prevent slide breaks in the middle of a paragraph
$--$ \widowpenalties 1 10000
$--$ \raggedbottom
$--$ $if(section-titles)$
$--$ \setbeamertemplate{part page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sep=16pt,center]{part title}
$--$     \usebeamerfont{part title}\insertpart\par
$--$   \end{beamercolorbox}
$--$ }
$--$ \setbeamertemplate{section page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sep=12pt,center]{part title}
$--$     \usebeamerfont{section title}\insertsection\par
$--$   \end{beamercolorbox}
$--$ }
$--$ \setbeamertemplate{subsection page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sep=8pt,center]{part title}
$--$     \usebeamerfont{subsection title}\insertsubsection\par
$--$   \end{beamercolorbox}
$--$ }
$--$ \AtBeginPart{
$--$   \frame{\partpage}
$--$ }
$--$ \AtBeginSection{
$--$   \ifbibliography
$--$   \else
$--$     \frame{\sectionpage}
$--$   \fi
$--$ }
$--$ \AtBeginSubsection{
$--$   \frame{\subsectionpage}
$--$ }
$--$ $endif$
$--$ $endif$
$--$ $if(beamerarticle)$
$--$ \usepackage{beamerarticle} % needs to be loaded first
$--$ $endif$
$--$

%======================================================= FONT MANAGEMENT
%---------------------------------- commmon math symbols and typesetting
%-------------------------------------------------------- (AMS packages)
\usepackage{amsmath,amssymb}
%-------------base fonts (used if no XeLaTeX / LuaLaTeX font provided)
$if(fontfamily)$
  \usepackage[$for(fontfamilyoptions)$$it$$sep$,$endfor$]{$fontfamily$}
$else$
  \usepackage{lmodern}
$endif$
%------------------------------------------------- optional line stretch
$if(linestretch)$
  \usepackage{setspace}
$endif$
%----------------------------------------- fontspec, XeTeX, LuaTeX setup
%--------------------------`unicode-math` and `mathspec` load `fontspec`
\usepackage{iftex}
\ifPDFTeX
  \usepackage[$if(fontenc)$$fontenc$$else$T1$endif$]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
$if(mathspec)$
  \ifXeTeX
    \usepackage{mathspec}
  \else
    \usepackage{unicode-math}
  \fi
$else$
  \usepackage{unicode-math}
$endif$
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
$if(mainfont)$
  \setmainfont[$for(mainfontoptions)$$it$$sep$,$endfor$]{$mainfont$}
$endif$
$if(sansfont)$
  \setsansfont[$for(sansfontoptions)$$it$$sep$,$endfor$]{$sansfont$}
$endif$
$if(monofont)$
  \setmonofont[$for(monofontoptions)$$it$$sep$,$endfor$]{$monofont$}
$endif$
$for(fontfamilies)$
  \newfontfamily{$fontfamilies.name$}[$for(fontfamilies.options)$$fontfamilies.options$$sep$,$endfor$]{$fontfamilies.font$}
$endfor$
$if(mathfont)$
$if(mathspec)$
  \ifXeTeX
    \setmathfont(Digits,Latin,Greek)[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \else
    \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \fi
$else$
  \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
$endif$
$endif$
$if(CJKmainfont)$
  \ifXeTeX
    \usepackage{xeCJK}
    \setCJKmainfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
$if(luatexjapresetoptions)$
  \ifLuaTeX
    \usepackage[$for(luatexjapresetoptions)$$luatexjapresetoptions$$sep$,$endfor$]{luatexja-preset}
  \fi
$endif$
$if(CJKmainfont)$
  \ifLuaTeX
    \usepackage[$for(luatexjafontspecoptions)$$luatexjafontspecoptions$$sep$,$endfor$]{luatexja-fontspec}
    \setmainjfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
\fi

% --------------------------Support for zero-width non-joiner characters
$if(zero-width-non-joiner)$
\makeatletter
\def\zerowidthnonjoiner{%
  % Prevent ligatures and adjust kerning, but still support hyphenating.
  \texorpdfstring{%
    \textormath{\nobreak\discretionary{-}{}{\kern.03em}%
      \ifvmode\else\nobreak\hskip\z@skip\fi}{}%
  }{}%
}
\makeatother
\ifPDFTeX
  \DeclareUnicodeCharacter{200C}{\zerowidthnonjoiner}
\else
  \catcode`^^^^200c=\active
  \protected\def ^^^^200c{\zerowidthnonjoiner}
\fi
$endif$

% --------------------------------------------------- KOMA font elements
$if(newkomafonts)$
  $for(newkomafonts)$
    $if(it.element)$
      \newkomafont$if(it.warning)$[$it.warning$]$endif${$it.element$}{%
        $if(it.font)$\normalfont%
          \setmainfont$if(it.fontoptions)$[%
            $for(it.fontoptions)$$it$$sep$,$endfor$]$endif${%
          $it.font$}%
        $endif$%
      $if(it.default)$$for(it.default)$$it$$endfor$$endif$%
      $if(it.defaults)$$for(it.defaults)$$it$$endfor$$endif$%
      $if(it.command)$$for(it.command)$$it$$endfor$$endif$%
      $if(it.commands)$$for(it.commands)$$it$$endfor$$endif$}
      $for(it.aliases)$
        \aliaskomafont{$it$}{$newkomafonts.element$}
      $endfor$
    $endif$
  $endfor$
$endif$

$if(setkomafonts)$
  $for(setkomafonts)$
    $if(it.element)$
      \setkomafont{$it.element$}{%
        $if(it.font)$\normalfont%
          \setmainfont$if(it.fontoptions)$[%
            $for(it.fontoptions)$$it$$sep$,$endfor$]$endif${%
          $it.font$}%
        $endif$%
      $if(it.default)$$for(it.default)$$it$$endfor$$endif$%
      $if(it.defaults)$$for(it.defaults)$$it$$endfor$$endif$%
      $if(it.command)$$for(it.command)$$it$$endfor$$endif$%
      $if(it.commands)$$for(it.commands)$$it$$endfor$$endif$}
    $endif$
  $endfor$
$endif$

$if(addtokomafonts)$
  $for(addtokomafonts)$
    $if(it.element)$
      \addtokomafont{$it.element$}{%
        $if(it.font)$\normalfont%
          \setmainfont$if(it.fontoptions)$[%
            $for(it.fontoptions)$$it$$sep$,$endfor$]$endif${%
          $it.font$}%
        $endif$%
      $if(it.command)$$for(it.command)$$it$$endfor$$endif$%
      $if(it.commands)$$for(it.commands)$$it$$endfor$$endif$}
    $endif$
  $endfor$
$endif$

$if(aliaskomafonts)$
  $for(aliaskomafonts)$
    $if(it.element)$
      $for(it.aliases)$
        \aliaskomafont{$it$}{$aliaskomafonts.element$}
      $endfor$
      $for(it.alias)$
        \aliaskomafont{$it$}{$aliaskomafonts.element$}
      $endfor$
    $endif$
  $endfor$
$endif$

%------------------------------------------------ beamer theme (removed)
$--$ $if(beamer)$
$--$   $if(theme)$
$--$     \usetheme[$for(themeoptions)$$themeoptions$$sep$,$endfor$]{$theme$}
$--$   $endif$
$--$   $if(colortheme)$
$--$     \usecolortheme{$colortheme$}
$--$   $endif$
$--$   $if(fonttheme)$
$--$     \usefonttheme{$fonttheme$}
$--$   $endif$
$--$ $if(mainfont)$
$--$ \usefonttheme{serif} % use mainfont rather than sansfont for slide text
$--$ $endif$
$--$ $if(innertheme)$
$--$ \useinnertheme{$innertheme$}
$--$ $endif$
$--$ $if(outertheme)$
$--$ \useoutertheme{$outertheme$}
$--$ $endif$
$--$ $endif$

$--$ this is located after geometry in Pandoc's default template
$--$ $if(beamer)$
$--$ \newif\ifbibliography
$--$ $endif$

%------------------ upquote for straight quotes in verbatim environments
%------------------------------------------------------ use if available
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}

%------------------------------------------------ microtype if available
%----------- for subliminal refinements towards typographical perfection
\IfFileExists{microtype.sty}{%
  $if(microtypeoptions)$%
    \usepackage[$for(microtypeoptions)$$microtypeoptions$$sep$,$endfor$]{microtype}
  $else$%
    \usepackage[final]{microtype}
  $endif$%
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}

%------------------------ paragraph separation: indent or vertical space
$if(indent)$
$else$
  \IfFileExists{parskip.sty}{%
  \usepackage{parskip}
  }{% else
  \setlength{\parindent}{0pt}
  \setlength{\parskip}{6pt plus 2pt minus 1pt}
  }
$endif$

% ---------------------------------------- support for verbatim in notes
% ---------------------- `verbatim-in-notes` automatically set by Pandoc
% -------------------------------- needs a second command after hyperref
$if(verbatim-in-note)$
  \usepackage{fancyvrb}
$endif$
% -------------------------------------------------------- color support
% ---------------------------- xcolor for driver-independent color names
$if(colorlinks)$
  \usepackage{xcolor}
$elseif(xcolor)$
  \usepackage{xcolor}
$elseif(definecolors)$
  \usepackage{xcolor}
$endif$
% -------------------------------------------------------- define colors
% ------------------------ requires name, model and spec. type optional.
$if(definecolors)$
  $for(definecolors)$
    $if(it.name)$$if(it.model)$$if(it.spec)$
      \definecolor[$if(it.type)$$it.type$$endif$]{$it.name$}{$it.model$}{%
      $for(it.spec)$$it$$sep$,$endfor$}
    $endif$$endif$$endif$
  $endfor$
$endif$
%-------------------------------extensive support for hypertext in LaTeX
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\hypersetup{
$if(title-meta)$
  pdftitle={$title-meta$},
$endif$
$if(author-meta)$
  pdfauthor={$author-meta$},
$endif$
$if(keywords)$
  pdfkeywords={$for(keywords)$$it$$sep$, $endfor$},
$endif$
$if(linksborderstyle)$
  pdfborderstyle={$linksborderstyle$},
$endif$
$if(colorlinks)$
  colorlinks=true,
  linkcolor=$if(linkcolor)$$linkcolor$$else$red$endif$,
  citecolor=$if(citecolor)$$citecolor$$else$blue$endif$,
  urlcolor=$if(urlcolor)$$urlcolor$$else$blue$endif$,
$else$
  $if(linksborder)$
    pdfborder={$if(linksborder.vcornerradius)$$linksborder.vcornerradius$$else$0$endif$ %
    $if(linksborder.hcornerradius)$$linksborder.hcornerradius$$else$0$endif$ %
    $if(linksborder.width)$$linksborder.width$$else$0$endif$ %
    $if(linksborder.dashpattern)$[ $for(linksborder.dashpattern)$$it$$sep$ $endfor$ ] $endif$%
    },
    linkbordercolor=$if(linkbordercolor)$$linkbordercolor$$else$red$endif$,
    citebordercolor=$if(citebordercolor)$$citebordercolor$$else$blue$endif$,
    urlbordercolor=$if(urlbordercolor)$$urlbordercolor$$else$blue$endif$,    
  $else$
    pdfborder={0 0 0},
  $endif$
$endif$
$if(pdfcreator)$
  pdfcreator={$pdfcreator$},
$else$
  pdfcreator={LaTeX and Pandoc},
$endif$
breaklinks=true}
$if(urlstyle)$
  \urlstyle{$urlstyle$}
$else$
  \urlstyle{same}
$endif$
%------------------------------------- verbatim in footnotes (see above)
%------------ looks like this needs to come after hyperref, not sure why
$if(verbatim-in-note)$
  \VerbatimFootnotes
$endif$

%================================== PANDOC AUTOMATIC TYPOGRAPHY SETTINGS
%----------------listings to typeset source code (see pkg "listings-ex")
$if(listings)$
  \usepackage{listings}
  \newcommand{\passthrough}[1]{#1}
  \lstset{defaultdialect=[5.3]Lua}
  \lstset{defaultdialect=[x86masm]Assembler}
$endif$
$if(lhs)$
  \lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$
$if(highlighting-macros)$
$highlighting-macros$
$endif$

%---------------------------------------------------------------- Tables
%----------------------longtable core LaTeX package for multipage tables
%-----------------------------booktabs for beautiful high quality tables
%----------------------array improves the tabular and array environments
$if(tables)$
  \usepackage{longtable,booktabs,array}
  \usepackage{calc} % for calculating minipage widths
  %-----------------------to create tabular cells spanning multiple rows
  $if(multirow)$
    \usepackage{multirow}
  $endif$
  $--$ commenting out beamer code
  $--$ $if(beamer)$
  $--$ \usepackage{caption}
  $--$ % Make caption package work with longtable
  $--$ \makeatletter
  $--$ \def\fnum@table{\tablename~\thetable}
  $--$ \makeatother
  $--$ $else$
  % Correct order of tables after \paragraph or \subparagraph
  \usepackage{etoolbox}
  \makeatletter
  \patchcmd\longtable{\par}{\if@noskipsec\mbox{}\fi\par}{}{}
  \makeatother
  % Allow footnotes in longtable head/foot
  \IfFileExists{footnotehyper.sty}{\usepackage{footnotehyper}}{\usepackage{footnote}}
  \makesavenoteenv{longtable}
  $--$ $endif$
  %---------------------------------------------------- LONGTABLE BUGFIX
  %------------redefine longtable because it doesn't work in multicolumn
  %----------------------------------------------------solves the error:
  %---------"! Package longtable Error: longtable not in 1-column mode."
  %----------------------------occuring in twocolumn mode (class option)
  %-----------------see issue: https://github.com/jgm/pandoc/issues/1023
  %----------------------------source: Marco Torchian@tex.stackexchange:
  %-------------------------https://tex.stackexchange.com/q/161431/43790
  %------------------------------------------------------------start fix
  $if(longtablefix)$
    \makeatletter
    \let\oldlt\longtable
    \let\endoldlt\endlongtable
    \def\longtable{\@ifnextchar[\longtable@i \longtable@ii}
    \def\longtable@i[#1]{\begin{figure*}[t]
    \onecolumn
    \centering
    \begin{minipage}{0.99\textwidth}
    \oldlt[#1]
    }
    \def\longtable@ii{\begin{figure*}[t]
    \onecolumn
    \centering
    \begin{minipage}{0.99\textwidth}
    \oldlt
    }
    \def\endlongtable{\endoldlt
    \end{minipage}
    %--------to switch back to "\onecolumn"/"\twocolumn" if classoption is
    %-----------------------------------------------"oncolumn"/"twocolumn"
    \ifonecol
    \onecolumn
    \else
    \twocolumn
    \fi
    \end{figure*}}
    \makeatother
  $endif$
  %--------------------------------------------------------------end fix
$endif$

%-------------------------------------------------------------- Graphics
%-------------------------------- graphicx to embed pictures in document
$if(graphics)$
  \usepackage{graphicx,grffile}
  \makeatletter
  \def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
  \def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
  \makeatother
  % Scale images if necessary, so that they will not overflow the page
  % margins by default, and it is still possible to overwrite the defaults
  % using explicit options in \includegraphics[width, height, ...]{}
  \setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
  % Set default figure placement to htbp
  \makeatletter
  \def\fps@figure{htbp}
  \makeatother
$endif$

%------------------------------------ More beamer handling (deactivated)
$--$ $if(beamer)$
$--$ % Prevent slide breaks in the middle of a paragraph:
$--$ \widowpenalties 1 10000
$--$ \raggedbottom
$--$   $if(section-titles)$
$--$   \setbeamertemplate{part page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sep=16pt,center]{part title}
$--$     \usebeamerfont{part title}\insertpart\par
$--$   \end{beamercolorbox}
$--$   }
$--$   \setbeamertemplate{section page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sbooktabsep=12pt,center]{part title}
$--$     \usebeamerfont{section title}\insertsection\par
$--$   \end{beamercolorbox}
$--$   }
$--$   \setbeamertemplate{subsection page}{
$--$   \centering
$--$   \begin{beamercolorbox}[sep=8pt,center]{part title}
$--$     \usebeamerfont{subsection title}\insertsubsection\par
$--$   \end{beamercolorbox}
$--$   }
$--$   \AtBeginPart{
$--$     \frame{\partpage}
$--$   }
$--$   \AtBeginSection{
$--$     \ifbibliography
$--$     \else
$--$       \frame{\sectionpage}
$--$     \fi
$--$   }
$--$   \AtBeginSubsection{
$--$     \frame{\subsectionpage}
$--$   }
$--$   $endif$
$--$ $endif$

%------------------------ links-as-notes to turn hotlinks into footnotes
%------------------------------------------ `links-as-notes` set by user
$if(links-as-notes)$
  \DeclareRobustCommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$

%-------------------------------------------------------- strikeout text
%---------------- Pandoc automatically sets the `strikeout` metavariable
$if(strikeout)$
  \usepackage[normalem]{ulem}
  % avoid problems with \sout in headers with hyperref:
  \pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$

%------------------------------------------------ prevent overfull lines
\setlength{\emergencystretch}{3em}  
%--------------------------------------------------- provide tight lists
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
%------------------------------------------------------ Section headings
$if(numbersections)$
  \setcounter{secnumdepth}{$if(secnumdepth)$$secnumdepth$$else$5$endif$}
$else$
  \setcounter{secnumdepth}{-\maxdimen} % remove sec numbering
$endif$
$if(beamer)$
$else$
  $if(block-headings)$
    % Make \paragraph and \subparagraph free-standing
    \ifx\paragraph\undefined\else
      \let\oldparagraph\paragraph
      \renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
    \fi
    \ifx\subparagraph\undefined\else
      \let\oldsubparagraph\subparagraph
      \renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
    \fi
  $endif$
$endif$

%------------------------------------------------------------ Page style
%--------------------------------will be overriden if scrheadings is set
$if(pagestyle)$
\pagestyle{$pagestyle$}
$endif$

%-------------------------------------------- Figures: default placement
%----------Order doesn't matter; 'htbp' just means that LaTeX is allowed
%---------------------to try here, at top, bottom or on a separate page. 
%-------------------It will try h, t, b, p in that order no matter what. 
\makeatletter
  \def\fps@figure{htbp}
\makeatother

%------------------------------------------------- Citeproc bibliography
%---------------------------------- styling commands with default values
$if(csl-refs)$
\newlength{\cslhangindent}
\setlength{\cslhangindent}{1.5em}
\newlength{\csllabelwidth}
\setlength{\csllabelwidth}{3em}
\newlength{\cslentryspacingunit} % times entry-spacing
\setlength{\cslentryspacingunit}{\parskip}
\newenvironment{CSLReferences}[2] % #1 hanging-ident, #2 entry spacing
 {% don't indent paragraphs
  \setlength{\parindent}{0pt}
  % turn on hanging indent if param 1 is 1
  \ifodd #1
  \let\oldpar\par
  \def\par{\hangindent=\cslhangindent\oldpar}
  \fi
  % set entry spacing
  \setlength{\parskip}{#2\cslentryspacingunit}
 }%
 {}
\usepackage{calc} % for calculating inline width
\newcommand{\CSLBlock}[1]{#1\hfill\break}
\newcommand{\CSLLeftMargin}[1]{\parbox[t]{\csllabelwidth}{#1}}
\newcommand{\CSLRightInline}[1]{\parbox[t]{\linewidth - \csllabelwidth}{#1}\break}
\newcommand{\CSLIndent}[1]{\hspace{\cslhangindent}#1}
$endif$

%------------------------------------------------- GEOMETRY: set lengths
%----------------------------- placed here to allow the user to override 
%-------------------------------- anything that the template sets above. 
$if(setlength)$
  $for(setlength)$
    $if(it.length)$$if(it.value)$
      \setlength{\$it.length$}{$it.value$}
    $endif$$endif$
  $endfor$
$endif$


%=========================================================== TITLE PAGES
%-----------------------------------------------------------------------
%------------------------------------ Define fields that will be printed
%---------------------------------------- with the `\maketitle` command.
%-------------------------------------- We can use predefined templates,
%---------------------------------------------------- complete raw code,
%-------------------------------------or a field-by-field specification.
%-----------------------------------------------------------------------
%------------ placed before header-includes to allow for user overriding
%--------------------------------------------- (e.g. via Pandoc filters)
%-----------------------------------------------------------------------

%--------------------------------------------------- Raw titlepages code
%--------------------------------- printed here if it uses `\maketitle`,
%------------------------------------- in the document's body otherwise.
$if(rawtitlecode)$
  $if(nomaketitle)$
  $else$
    $rawtitlecode$
  $endif$
%-------------------------------------------------- Predefined templates
%------------------------------------ ignored if `rawtitlecode` provided
%-----------------------------------------------------------------------
$elseif(titletemplate-custom)$
$elseif(titletemplate-A)$
$elseif(titletemplate-B)$
%--------------------------- Field-by-field specification of title pages
$else$
%        ---------------------------------------------- extra title page
  $if(extratitlecode)$
    \extratitle{%
    $extratitlecode$ %
    }
  $endif$
%        --------------------------------- frontispiece (opposite title)
  $if(frontispiececode)$
    \frontispiece{%
    $frontispiececode$ %
    }
  $endif$
%        -------------------------------------- title head (above title)
  $if(titleheadcode)$
    \titlehead{%
    $titleheadcode$ %
    }    
  $endif$
%        ---------------------- subject (above title, subject koma font)
  $if(subject)$
    \subject{%
    $subject$ %
    }    
  $endif$
%        ---------------------------------------------------- title line
  $if(title)$
    \title{$title$}
  $else$
    \title{~}
  $endif$
%        ------------------------------------------------------ subtitle
  $if(subtitle)$
    \subtitle{$subtitle$}
  $endif$
%        -------------------------------------------------------- author
  $if(author)$
    \author{$for(author)$$it$$sep$ \and $endfor$}
  $endif$
%        ------------------------------------------------ place and date
  $if(date)$
  \date{%
    $if(place)$$place$, $endif$%
    $date$ %
  }
  $endif$
%        ---------------------------------------------------- dedication
 $if(dedicationcode)$
    \dedication{%
    $dedicationcode$ %
    }
  $endif$
%        ---------------------------------------------------- publishers
%        ---------------------------------------can be used as titlefoot
%        ------------------------------------------------ with a \parbox
 $if(publisherscode)$
    \publishers{%
    $publisherscode$ %
    }
  $endif$
%        ------------------------------------- upper and lower titleback
 $if(uppertitlebackcode)$
    \uppertitleback{%
    $uppertitlebackcode$ %
    }
  $endif$
 $if(lowertitlebackcode)$
    \lowertitleback{%
    $lowertitlebackcode$ %
    }
  $endif$

$endif$

%================================================== USER HEADER-INCLUDES
$for(header-includes)$
$header-includes$
$endfor$


%===================================================== LANGUAGES SUPPORT
%---------------------------------------------- polyglossia, babel, bidi
$if(lang)$
\ifXeTeX
%---------------------------------- `polyglossia` requires XeTeX/XeLaTeX
%------------------------- load it as late as possible but before `bidi`
  \usepackage{polyglossia}
  \setmainlanguage[$for(polyglossia-lang.options)$$it$$sep$,$endfor$]{$polyglossia-lang.name$}
  $for(polyglossia-otherlangs)$
    \setotherlanguage[$for(polyglossia-otherlangs.options)$$it$$sep$,$endfor$]{$polyglossia-otherlangs.name$}
  $endfor$
\else
  \usepackage[$for(babel-otherlangs)$$babel-otherlangs$,$endfor$main=$babel-lang$]{babel}
%------------------babel hack to get rid of language-specific shorthands
%----------------------------------will not be needed in the near future
%------------------------see <https://github.com/jgm/pandoc/issues/6817>
  \let\LanguageShortHands\languageshorthands
  \def\languageshorthands#1{}
  $if(babel-newcommands)$
    $babel-newcommands$
  $endif$
\fi
$endif$
%------------------------language-sensitive removal of illegal ligatures
%----------------------------------------------------(requires LuaLaTeX)
\ifLuaTeX
  \usepackage{selnolig}  % disable illegal ligatures
\fi
%------------------------------------------------left-to-right languages
$if(dir)$
\ifXeTeX
  % Load bidi as late as possible as it modifies e.g. graphicx
  \usepackage{bidi}
\fi
\ifPDFTeX
  \TeXXeTstate=1
  \newcommand{\RL}[1]{\beginR #1\endR}
  \newcommand{\LR}[1]{\beginL #1\endL}
  \newenvironment{RTL}{\beginR}{\endR}
  \newenvironment{LTR}{\beginL}{\endL}
\fi
$endif$

%========================================================== BIBLIOGRAPHY
%--------------------------------------load natbib or biblatex if needed
$if(natbib)$
  \usepackage[$natbiboptions$]{natbib}
  \bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}
$endif$
$if(biblatex)$
  \usepackage[$if(biblio-style)$style=$biblio-style$,$endif$%
  $for(biblatexoptions)$$it$$sep$,$endfor$]{biblatex}
  $for(bibliography)$
    \addbibresource{$it$}
  $endfor$
$endif$

$if(nocite-ids)$
  \nocite{$for(nocite-ids)$$it$$sep$, $endfor$}
$endif$
$if(csquotes)$
  \usepackage{csquotes}
$endif$

%======================================================== EXTRA SETTINGS
%-----------------------------to make TeX less fussy about line breaking
$if(sloppy)$
  \sloppy
$endif$

%----------------------------two typeset table of contents in two column
$if(twocol_toc)$
  \unsettoc{toc}{onecolumn}
$endif$

%-------------------------------------------------------- french spacing
$if(frenchspacing)$
  \frenchspacing
$endif$

%================================================== DOCUMENT STARTS HERE
\begin{document}
%----------------------------------------------- frontmatter starts here
$if(has-frontmatter)$
\frontmatter
$endif$

%-----------------------------------------------print title page(s) here
%----------------------------------- use maketitle unless told otherwise
%------------------------------ if not place any raw titlepage code here
%----------------------------- maketitle-page to set title's page number
$if(nomaketitle)$
  $if(rawtitlecode)$$rawtitlecode$$endif$
$else$
  \maketitle$if(maketitle-page)$[$maketitle-page$]$endif$
$endif$

$for(include-before)$
$include-before$
$endfor$

$if(toc)$
$if(beamer)$
\begin{frame}
\tableofcontents[hideallsubsections]
\end{frame}
$else$
{
$if(colorlinks)$
\hypersetup{%
  $if(toccolor)$linkcolor={$toccolor$},$else$$endif$%
  $if(tocbordercolor)$linkbordercolor={$toccolor$},$else$$endif$%
}
$endif$
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$
$endif$
$if(lot)$
\listoftables
$endif$
$if(lof)$
\listoffigures
$endif$


%------------------------------------------------ mainmatter starts here
%---------------------------- if the user provides their own \mainmatter
%-------------------------- command they should set `mainmatter` to true
$if(has-frontmatter)$
  $if(mainmatter)$
  $else$
    \mainmatter
  $endif$
$endif$
$body$
%------------------------------------------------ backmatter starts here
%---------------------------------------- only issue \backmatter if used
$if(has-frontmatter)$
  $if(natbib)$\backmatter
  $elseif(biblatex)$\backmatter
  $elseif(include-after)$\backmatter
  $endif$
$endif$

$if(natbib)$
  $if(bibliography)$
    $if(biblio-title)$
      $if(has-chapters)$
      \renewcommand\bibname{$biblio-title$}
      $else$
      \renewcommand\refname{$biblio-title$}
      $endif$
    $endif$
    $--$ $if(beamer)$
    $--$   \begin{frame}[allowframebreaks]{$biblio-title$}
    $--$     \bibliographytrue
    $--$ $endif$
    \bibliography{$for(bibliography)$$bibliography$$sep$,$endfor$}
    $--$  $if(beamer)$
    $--$    \end{frame}
    $--$  $endif$
  $endif$
$endif$
$if(biblatex)$
  $--$ $if(beamer)$
  $--$ \begin{frame}[allowframebreaks]{$biblio-title$}
  $--$   \bibliographytrue
  $--$   \printbibliography[heading=none]
  $--$ \end{frame}
  $--$ $else$
  \printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$
  $--$ $endif$
$endif$

$for(include-after)$
$include-after$
$endfor$

\end{document}
